// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: ticket.proto

package ops

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpsTicketOperation int32

const (
	OpsTicketOperation_OPS_TICKET_OPERATION_ORDER_CREATION          OpsTicketOperation = 0
	OpsTicketOperation_OPS_TICKET_OPERATION_LOCK_BALANCE            OpsTicketOperation = 1
	OpsTicketOperation_OPS_TICKET_OPERATION_ORDER_CREATION_RESPONSE OpsTicketOperation = 2
	OpsTicketOperation_OPS_TICKET_OPERATION_APPROVE_CREATION        OpsTicketOperation = 3
	OpsTicketOperation_OPS_TICKET_OPERATION_REFUND_BALANCE          OpsTicketOperation = 4
	OpsTicketOperation_OPS_TICKET_OPERATION_MATCH_ORDER             OpsTicketOperation = 5
	OpsTicketOperation_OPS_TICKET_OPERATION_SAVE_STOCK_BOOK         OpsTicketOperation = 6
	OpsTicketOperation_OPS_TICKET_OPERATION_RECREATE_ORDER          OpsTicketOperation = 7
	OpsTicketOperation_OPS_TICKET_OPERATION_ORDER_NOTIFICATION      OpsTicketOperation = 8
	OpsTicketOperation_OPS_TICKET_OPERATION_DROP_ORDER              OpsTicketOperation = 9
	OpsTicketOperation_OPS_TICKET_OPERATION_GET_ORDER_INFO          OpsTicketOperation = 10
)

// Enum value maps for OpsTicketOperation.
var (
	OpsTicketOperation_name = map[int32]string{
		0:  "OPS_TICKET_OPERATION_ORDER_CREATION",
		1:  "OPS_TICKET_OPERATION_LOCK_BALANCE",
		2:  "OPS_TICKET_OPERATION_ORDER_CREATION_RESPONSE",
		3:  "OPS_TICKET_OPERATION_APPROVE_CREATION",
		4:  "OPS_TICKET_OPERATION_REFUND_BALANCE",
		5:  "OPS_TICKET_OPERATION_MATCH_ORDER",
		6:  "OPS_TICKET_OPERATION_SAVE_STOCK_BOOK",
		7:  "OPS_TICKET_OPERATION_RECREATE_ORDER",
		8:  "OPS_TICKET_OPERATION_ORDER_NOTIFICATION",
		9:  "OPS_TICKET_OPERATION_DROP_ORDER",
		10: "OPS_TICKET_OPERATION_GET_ORDER_INFO",
	}
	OpsTicketOperation_value = map[string]int32{
		"OPS_TICKET_OPERATION_ORDER_CREATION":          0,
		"OPS_TICKET_OPERATION_LOCK_BALANCE":            1,
		"OPS_TICKET_OPERATION_ORDER_CREATION_RESPONSE": 2,
		"OPS_TICKET_OPERATION_APPROVE_CREATION":        3,
		"OPS_TICKET_OPERATION_REFUND_BALANCE":          4,
		"OPS_TICKET_OPERATION_MATCH_ORDER":             5,
		"OPS_TICKET_OPERATION_SAVE_STOCK_BOOK":         6,
		"OPS_TICKET_OPERATION_RECREATE_ORDER":          7,
		"OPS_TICKET_OPERATION_ORDER_NOTIFICATION":      8,
		"OPS_TICKET_OPERATION_DROP_ORDER":              9,
		"OPS_TICKET_OPERATION_GET_ORDER_INFO":          10,
	}
)

func (x OpsTicketOperation) Enum() *OpsTicketOperation {
	p := new(OpsTicketOperation)
	*p = x
	return p
}

func (x OpsTicketOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpsTicketOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_proto_enumTypes[0].Descriptor()
}

func (OpsTicketOperation) Type() protoreflect.EnumType {
	return &file_ticket_proto_enumTypes[0]
}

func (x OpsTicketOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpsTicketOperation.Descriptor instead.
func (OpsTicketOperation) EnumDescriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0}
}

type OpsTicketState int32

const (
	OpsTicketState_OPS_TICKET_STATE_NEW     OpsTicketState = 0
	OpsTicketState_OPS_TICKET_STATE_PROCESS OpsTicketState = 1
)

// Enum value maps for OpsTicketState.
var (
	OpsTicketState_name = map[int32]string{
		0: "OPS_TICKET_STATE_NEW",
		1: "OPS_TICKET_STATE_PROCESS",
	}
	OpsTicketState_value = map[string]int32{
		"OPS_TICKET_STATE_NEW":     0,
		"OPS_TICKET_STATE_PROCESS": 1,
	}
)

func (x OpsTicketState) Enum() *OpsTicketState {
	p := new(OpsTicketState)
	*p = x
	return p
}

func (x OpsTicketState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpsTicketState) Descriptor() protoreflect.EnumDescriptor {
	return file_ticket_proto_enumTypes[1].Descriptor()
}

func (OpsTicketState) Type() protoreflect.EnumType {
	return &file_ticket_proto_enumTypes[1]
}

func (x OpsTicketState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpsTicketState.Descriptor instead.
func (OpsTicketState) EnumDescriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{1}
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId      string             `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	State         OpsTicketState     `protobuf:"varint,2,opt,name=state,proto3,enum=OPS.OpsTicketState" json:"state,omitempty"`
	OperationType OpsTicketOperation `protobuf:"varint,3,opt,name=operation_type,json=operationType,proto3,enum=OPS.OpsTicketOperation" json:"operation_type,omitempty"`
	Data          []byte             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *Ticket) GetState() OpsTicketState {
	if x != nil {
		return x.State
	}
	return OpsTicketState_OPS_TICKET_STATE_NEW
}

func (x *Ticket) GetOperationType() OpsTicketOperation {
	if x != nil {
		return x.OperationType
	}
	return OpsTicketOperation_OPS_TICKET_OPERATION_ORDER_CREATION
}

func (x *Ticket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_ticket_proto protoreflect.FileDescriptor

var file_ticket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x4f, 0x50, 0x53, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x50, 0x53,
	0x2e, 0x4f, 0x70, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x4f, 0x50, 0x53, 0x2e, 0x4f, 0x70, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0xde, 0x03, 0x0a, 0x12, 0x4f,
	0x70, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x4f, 0x50,
	0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10,
	0x01, 0x12, 0x30, 0x0a, 0x2c, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x27,
	0x0a, 0x23, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x50, 0x53, 0x5f, 0x54,
	0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x05, 0x12, 0x28, 0x0a,
	0x24, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b,
	0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x06, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x50, 0x53, 0x5f, 0x54,
	0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x07,
	0x12, 0x2b, 0x0a, 0x27, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x23, 0x0a,
	0x1f, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0x09, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0a, 0x2a, 0x48, 0x0a, 0x0e, 0x4f,
	0x70, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x4f, 0x50, 0x53, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x50, 0x53, 0x5f, 0x54,
	0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x6f, 0x70, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_proto_rawDescOnce sync.Once
	file_ticket_proto_rawDescData = file_ticket_proto_rawDesc
)

func file_ticket_proto_rawDescGZIP() []byte {
	file_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_proto_rawDescData)
	})
	return file_ticket_proto_rawDescData
}

var file_ticket_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ticket_proto_goTypes = []interface{}{
	(OpsTicketOperation)(0), // 0: OPS.OpsTicketOperation
	(OpsTicketState)(0),     // 1: OPS.OpsTicketState
	(*Ticket)(nil),          // 2: OPS.Ticket
}
var file_ticket_proto_depIdxs = []int32{
	1, // 0: OPS.Ticket.state:type_name -> OPS.OpsTicketState
	0, // 1: OPS.Ticket.operation_type:type_name -> OPS.OpsTicketOperation
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ticket_proto_init() }
func file_ticket_proto_init() {
	if File_ticket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_proto_depIdxs,
		EnumInfos:         file_ticket_proto_enumTypes,
		MessageInfos:      file_ticket_proto_msgTypes,
	}.Build()
	File_ticket_proto = out.File
	file_ticket_proto_rawDesc = nil
	file_ticket_proto_goTypes = nil
	file_ticket_proto_depIdxs = nil
}
